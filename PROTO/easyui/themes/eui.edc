#define TOOLBAR_INTERVAL  0.25
#define TOOLBAR_MOVE_NONE 0
#define TOOLBAR_MOVE_UP   1
#define TOOLBAR_MOVE_DOWN 2

collections {
  group {
    name: "split";
    parts {
      part {
        name: "left";
        type: SWALLOW;
        description {
          state: "default" 0.0;
          rel1.relative: -0.5 0.0;
          rel2.relative: 0.0 1.0;
        }
        description {
          state: "left_enabled" 0.0;
          rel1.relative: 0.0 0.0;
          rel2.relative: 0.5 1.0;
        }
        description {
          state: "tablet" 0.0;
          rel1.relative: 0.0 0.0;
          rel2.relative: 0.2 1.0;
        }
      }
      part {
        name: "right_left";
        type: SPACER;
        description {
          state: "default" 0.0;
          rel2.offset: 0 -1;
        }
      }
      part {
        name: "right";
        type: SWALLOW;
        description {
          state: "default" 0.0;
          align: 0 1;
          fixed: 1 1;
          rel1.to: "pin";
          rel2.to_x: "pin";
        }
      }
      part {
        name: "pin";
        type: RECT;
        description {
          state: "default" 0.0;
          visible: 0;
          fixed: 1 1;
          color: 0 0 0 0;
        }
        description {
          state: "left_enabled" 0.0;
          inherit: "default";
          visible: 1;
          rel1.relative: 0.5 0.0;
          rel2.relative: 1.5 1.0;
          rel2.offset: -1 -1;
          color: 0 0 0 192;
        }
        description {
          state: "tablet" 0.0;
          visible: 0;
          rel1.relative: 0.2 0.0;
          rel2.relative: 1.0 1.0;
          rel2.offset: -1 -1;
          color: 0 0 0 0;
        };
      }
      part {
         name: "content-block";
         type: RECT;
         description {
           state: "default" 0.0;
           color: 255 255 255 0;
           visible: 0;
         }
         description {
           state: "visible" 0.0;
           inherit: "default" 0.0;
           color: 0 0 0 128;
           visible: 1;
         }
         description {
           state: "tablet" 0.0;
           inherit: "default" 0.0;
         }
      }
    }
    programs {
      program {
        signal: "phone,mode";
        action: STATE_SET "default" 0.0;
        transition: SINUSOIDAL 0.5;
        target: "left";
        target: "pin";
        target: "content-block";
      }
      program {
        signal: "tablet,mode";
        action: STATE_SET "tablet" 0.0;
        transition: SINUSOIDAL 0.5;
        target: "left";
        target: "pin";
        target: "content-block";
      }
      program {
        signal: "show,left";
        action: STATE_SET "left_enabled" 0.0;
        transition: SINUSOIDAL 0.5;
        target: "left";
        target: "pin";
      }
      program {
        signal: "hide,left";
        action: STATE_SET "default" 0.0;
        transition: SINUSOIDAL 0.5;
        target: "left";
        target: "pin";
      }
      program {
        signal: "mouse,clicked,*";
        source: "pin";
        action: SIGNAL_EMIT "hide,left" "";
      }
      program {
        signal: "unblock,ui";
        action: STATE_SET "default" 0.0;
        transition: ACCELERATE 0.5;
        target: "content-block";
      }
      program {
        signal: "block,ui";
        action: STATE_SET "visible" 0.0;
        transition: DECELERATE 0.5;
        target: "content-block";
      }
    }
  }
  group {
    name: "app";
    parts {
      part {
        name: "pin";
        type: RECT;
        description {
          state: "default" 0.0;
          visible: 0;
        }
      }
      part {
        name: "view-clipper";
        type: RECT;
        description {
          state: "default" 0.0;
          rel1.to_y: "toolbar";
          rel1.relative: 0 1;
        }
        description {
          state: "up" 0 0;
          rel2.to_y: "toolbar";
          rel2.relative: 1 0;
        }
      }
      part {
        name: "view";
        type: SWALLOW;
        clip_to: "view-clipper";
        description {
          rel1.to: "view-clipper";
          rel2.to: "view-clipper";
        }
      }
      part {
        name: "toolbar";
        type: SWALLOW;
        description {
          state: "default" 0.0;
          align: 0 1;
          fixed: 0 1;
          rel2.to_y: "pin";
          rel2.relative: 1 0;
        }
        description {
          state: "show,up" 0.0;
          inherit: "default";
          align: 1 0;
        }
        description {
          state: "hide,down" 0.0;
          align: 1 0;
          fixed: 0 1;
          rel1.relative: 0 1;
          rel2.relative: 1 1;
        }
        description {
          state: "show,down" 0.0;
          inherit: "hide,down";
          align: 0 1;
        }
      }
    }
    programs {
      script {
        public animating;
        public moving;
      }
      program {
        signal: "show,toolbar";
        after: "cleanup";
        script {
          if (!get_int(animating))
            emit("showing,toolbar", "");
          set_int(animating, 1);
        }
      }
      program {
        name: "cleanup";
        in: TOOLBAR_INTERVAL 0.0;
        script {
          set_int(animating, 0);
        }
      }
      program {
        signal: "showing,toolbar";
        filter: "toolbar" "default";
        action: STATE_SET "show,up" 0.0;
        transition: DECELERATE TOOLBAR_INTERVAL;
        target: "toolbar";
      }
      program {
        signal: "showing,toolbar";
        filter: "toolbar" "hide,down";
        action: STATE_SET "show,down" 0.0;
        transition: DECELERATE TOOLBAR_INTERVAL;
        target: "toolbar";
      }
      program {
        signal: "hide,toolbar";
        filter: "toolbar" "show,up";
        action: STATE_SET "default" 0.0;
        transition: DECELERATE TOOLBAR_INTERVAL;
        target: "toolbar";
        after: "check,moving,toolbar";
      }
      program {
        signal: "hide,toolbar";
        filter: "toolbar" "show,down";
        action: STATE_SET "hide,down" 0.0;
        transition: DECELERATE TOOLBAR_INTERVAL;
        target: "toolbar";
        after: "check,moving,toolbar";
      }
      program {
        name: "check,moving,toolbar";
        script {
          new move = get_int(moving);
          set_int(moving, TOOLBAR_MOVE_NONE);
          if (move == TOOLBAR_MOVE_UP)
            emit("top,toolbar", "");
          else if (move == TOOLBAR_MOVE_DOWN)
            emit("bottom,toolbar", "");
          if (move != TOOLBAR_MOVE_NONE)
            emit("show,toolbar", "");
        }
      }
      program {
        signal: "top,toolbar";
        filter: "toolbar" "show,down" 0 0;
        script {
          set_int(moving, TOOLBAR_MOVE_UP);
          emit("hide,toolbar", "");
        }
      }
      program {
        signal: "top,toolbar";
        filter: "toolbar" "hide,down" 0.0;
        script {
          set_state(PART:"view-clipper", "default", 0.0);
          set_state(PART:"toolbar", "default", 0.0);
        }
      }
      program {
        signal: "bottom,toolbar";
        filter: "toolbar" "show,up" 0 0;
        script {
          set_int(moving, TOOLBAR_MOVE_DOWN);
          emit("hide,toolbar", "");
        }
      }
      program {
        signal: "bottom,toolbar";
        filter: "toolbar" "default" 0.0;
        script {
          set_state(PART:"view-clipper", "up", 0.0);
          set_state(PART:"toolbar", "hide,down", 0.0);
        }
      }
    }
  }
  group {
    name: "list";
    parts {
      part {
        name: "pin";
        type: RECT;
        description {
          state: "default" 0.0;
          visible: 0;
        }
      }
      part {
        name: "search";
        type: SWALLOW;
        description {
          state: "default" 0.0;
          align: 0 1;
          fixed: 0 1;
          rel2.to_y: "pin";
          rel2.relative: 1 0;
        }
        description {
          state: "show" 0.0;
          inherit: "default";
          align: 1 0;
        }
      }
      part {
        name: "list";
        type: SWALLOW;
        description {
          state: "default" 0 0;
          rel1.to: "search";
          rel1.relative: 0.0. 1.0;
        }
      }
    }
    programs {
      program {
        signal: "show,search";
        action: STATE_SET "show" 0.0;
        transition: DECELERATE 0.5;
        target: "search";
      }
      program {
        signal: "hide,search";
        action: STATE_SET "default" 0.0;
        transition: DECELERATE 0.5;
        target: "search";
      }
    }
  }

#define LAYOUT_PROGRAM(name_, state_) \
  program { \
    signal: "popup,layout,"name_; \
    action: STATE_SET state_ 0.0; \
    target: "eui.swallow.icon"; \
    target: "eui.text.title"; \
    target: "title.separator"; \
    target: "eui.swallow.content"; \
    target: "eui.swallow.buttons"; \
    target: "hack"; \
  }

#define LAYOUT_STATE_INVISIBLE(name_) \
  description { \
    state: name_; \
    inherit: "invisible"; \
    visible: 0; \
  }

#define LAYOUT_STATE_VISIBLE(name_) \
  description { \
    state: name_; \
    inherit: "default"; \
  }

  group { name: "popup";
    parts {
      part { name: "hack";
        type: RECT;
        description { state: "default";
          min: 300 400;
          color: 39 38 39 255;
        }
        description { state: "invisible";
        }
        LAYOUT_STATE_VISIBLE("content-only")
        LAYOUT_STATE_VISIBLE("content-buttons")
        LAYOUT_STATE_VISIBLE("title-content-buttons")
        LAYOUT_STATE_INVISIBLE("icon-content")
        LAYOUT_STATE_VISIBLE("title-content")
        description { state: "icon-content";
          inherit: "default" 0.0;
          min: 200 48;
        }
      }
      part { name: "eui.swallow.icon";
        type: SWALLOW;
        description { state: "default";
          rel1.relative: 0.0 0.0;
          rel2.relative: 0.0 0.0;
          rel2.offset: 48 48;
        }
        description { state: "invisible";
          inherit: "default";
          rel2.offset: 0 0;
          visible: 0;
        }
        LAYOUT_STATE_INVISIBLE("content-only")
        LAYOUT_STATE_INVISIBLE("content-buttons")
        LAYOUT_STATE_INVISIBLE("title-content-buttons")
        LAYOUT_STATE_VISIBLE("icon-content")
        LAYOUT_STATE_INVISIBLE("title-content")
      }
      part { name: "eui.text.title";
        type: TEXT;
        description { state: "default";
          rel1.relative: 1.0 0.0;
          rel1.to_x: "eui.swallow.icon";
          rel2.relative: 1.0 0.0;
          rel2.offset: -1 48;
          text {
            size: 16;
            align: 0.0 0.5;
          }
          color: 47 179 228 255;
        }
        description { state: "invisible";
          inherit: "default";
          rel1.relative: 0.0 0.0;
          rel2.relative: 0.0 0.0;
          visible: 0;
        }
        LAYOUT_STATE_INVISIBLE("content-only")
        LAYOUT_STATE_INVISIBLE("content-buttons")
        LAYOUT_STATE_VISIBLE("title-content-buttons")
        LAYOUT_STATE_INVISIBLE("icon-content")
        LAYOUT_STATE_VISIBLE("title-content")
      }
      part { name: "title.separator";
        type: RECT;
        description { state: "default";
          color: 47 179 228 255;
          rel1.relative: 0.0 1.0;
          rel1.to_y: "eui.text.title";
          rel2.relative: 1.0 1.0;
          rel2.to: "eui.text.title";
          rel2.offset: -1 1;
        }
        description { state: "invisible";
          rel1.relative: 0.0 0.0;
          rel1.offset: 0 0;
          rel2.relative: 1.0 0.0;
          rel2.offset: 0 0;
          visible: 0;
        }
        LAYOUT_STATE_INVISIBLE("content-only")
        LAYOUT_STATE_INVISIBLE("content-buttons")
        LAYOUT_STATE_VISIBLE("title-content-buttons")
        LAYOUT_STATE_INVISIBLE("icon-content")
        LAYOUT_STATE_VISIBLE("title-content")
      }
      part { name: "eui.swallow.content";
        type: SWALLOW;
        description { state: "default";
          rel1.relative: 0.0 1.0;
          rel1.to_y: "title.separator";
          rel2.relative: 1.0 0.0;
          rel2.to_y: "eui.swallow.buttons";
          rel2.offset: -1 -1;
          color: 240 246 240 255;
        }
        description { state: "invisible";
          visible: 0;
        }
        description { state: "content-only";
	}
        LAYOUT_STATE_VISIBLE("content-buttons")
        LAYOUT_STATE_VISIBLE("title-content-buttons")
        description { state: "icon-content";
          rel1.to_x: "eui.swallow.icon";
          rel1.relative: 1.0 0.0;
          rel2.relative: 1.0 1.0;
        }
        description { state: "title-content";
          rel1.to_y: "title.separator";
          rel1.relative: 0.0 1.0;
          rel2.relative: 1.0 1.0;
        }
        description { state: "content-text";
          visible: 0;
        }
      }
      part { name: "eui.swallow.buttons";
        type: SWALLOW;
        description { state: "default";
          rel1.relative: 0.0 1.0;
          rel1.offset: 0 -49;
          rel2.relative: 1.0 1.0;
          rel2.offset: -1 -1;
        }
        description { state: "invisible";
          visible: 0;
          rel1.relative: 0.0 1.0;
          rel2.relative: 1.0 1.0;
        }
        LAYOUT_STATE_INVISIBLE("content-only")
        LAYOUT_STATE_VISIBLE("content-buttons")
        LAYOUT_STATE_VISIBLE("title-content-buttons")
        LAYOUT_STATE_INVISIBLE("icon-content")
        LAYOUT_STATE_INVISIBLE("title-content")
      }
    }
    programs {
      LAYOUT_PROGRAM("full", "default")
      LAYOUT_PROGRAM("content,only", "content-only")
      LAYOUT_PROGRAM("content,buttons", "content-buttons")
      LAYOUT_PROGRAM("title,content,buttons", "title-content-buttons")
      LAYOUT_PROGRAM("icon,content", "icon-content")
      LAYOUT_PROGRAM("title,content", "title-content")
    }
  }

#undef LAYOUT_PROGRAM
#undef LAYOUT_STATE_INVISIBLE
#undef LAYOUT_STATE_VISIBLE

  group { name: "elm/layout/center/default";
     parts {
        part { name: "base";
           type: RECT;
           mouse_events: 0;
           repeat_events: 1;
           description { state: "default" 0.0;
              color: 0 0 0 0;
              rel1.relative: 0.0 0.0;
              rel2.relative: 1.0 1.0;
           }
        }
        part { name: "pop";
           type: RECT;
           mouse_events: 1;
           description { state: "default" 0.0;
              rel1.to: "elm.swallow.content";
              rel1.offset: -5 -5;
              rel2.to: "elm.swallow.content";
              rel2.offset: 4 4;
              color: 39 38 39 255;
           }
        }
        part { name: "elm.swallow.content";
           type: SWALLOW;
           description { state: "default" 0.0;
              rel1.to: "base";
              rel2.to: "base";
           }
        }
     }
  }
  group { name: "elm/layout/block_events/default";
     parts {
        part { name: "block_events";
           type: RECT;
           description { state: "default" 0.0;
              color: 0 0 0 160;
              visible: 1;
           }
        }
     }
     programs {
        program {
           name: "block_clicked";
           signal: "mouse,clicked,1";
           source: "block_events";
           action: SIGNAL_EMIT "elm,action,click" "elm";
        }
     }
  }
}
