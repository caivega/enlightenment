
### Library

lib_LTLIBRARIES += lib/ecore/libecore.la

installed_ecoremainheadersdir = $(includedir)/ecore-@VMAJ@
dist_installed_ecoremainheaders_DATA = \
lib/ecore/Ecore.h \
lib/ecore/Ecore_Getopt.h

lib_ecore_libecore_la_SOURCES = \
lib/ecore/ecore.c \
lib/ecore/ecore_alloc.c \
lib/ecore/ecore_anim.c \
lib/ecore/ecore_app.c \
lib/ecore/ecore_events.c \
lib/ecore/ecore_getopt.c \
lib/ecore/ecore_glib.c \
lib/ecore/ecore_idle_enterer.c \
lib/ecore/ecore_idle_exiter.c \
lib/ecore/ecore_idler.c \
lib/ecore/ecore_job.c \
lib/ecore/ecore_main.c \
lib/ecore/ecore_pipe.c \
lib/ecore/ecore_poll.c \
lib/ecore/ecore_time.c \
lib/ecore/ecore_timer.c \
lib/ecore/ecore_thread.c \
lib/ecore/ecore_throttle.c \
lib/ecore/ecore_private.h

if HAVE_WIN32
lib_ecore_libecore_la_SOURCES += lib/ecore/ecore_exe_win32.c
else
if HAVE_WINCE
lib_ecore_libecore_la_SOURCES += lib/ecore/ecore_exe_wince.c
else
#if ECORE_HAVE_PS3
#libecore_la_SOURCES += ecore_exe_ps3.c
#else
#if ECORE_HAVE_EXOTIC
#libecore_la_SOURCES +=
#else
lib_ecore_libecore_la_SOURCES += lib/ecore/ecore_signal.c lib/ecore/ecore_exe.c
#endif
#endif
endif
endif

lib_ecore_libecore_la_CPPFLAGS = \
-I$(top_srcdir)/src/lib/eina \
-I$(top_builddir)/src/lib/eina \
-I$(top_srcdir)/src/lib/eo \
-I$(top_srcdir)/src/lib/ecore \
-DEFL_ECORE_BUILD \
@EFL_CFLAGS@ \
@EFL_COV_CFLAGS@ \
@ECORE_CFLAGS@ \
@USE_EVIL_CFLAGS@ \
@USE_ESCAPE_CFLAGS@

lib_ecore_libecore_la_LIBADD = \
lib/eo/libeo.la \
lib/eina/libeina.la \
@USE_EVIL_LIBS@ \
@USE_ESCAPE_LIBS@ \
@ECORE_LIBS@ \
@EFL_COV_LIBS@ \
-lm

lib_ecore_libecore_la_LDFLAGS = -no-undefined -version-info @version_info@ @release_info@

### Unit tests

if EFL_ENABLE_TESTS

check_PROGRAMS += tests/ecore/ecore_suite

tests_ecore_ecore_suite_SOURCES = \
tests/ecore/ecore_suite.c \
tests/ecore/ecore_test_ecore.c \
tests/ecore/ecore_test_ecore_con.c \
tests/ecore/ecore_test_ecore_x.c \
tests/ecore/ecore_suite.h

tests_ecore_ecore_suite_CPPFLAGS = \
-I$(top_srcdir)/src/lib/eina \
-I$(top_builddir)/src/lib/eina \
-I$(top_srcdir)/src/lib/eo \
-I$(top_srcdir)/src/lib/ecore \
-I$(top_srcdir)/src/lib/ecore_audio \
-I$(top_srcdir)/src/lib/ecore_con \
-I$(top_srcdir)/src/lib/ecore_file \
-I$(top_srcdir)/src/lib/ecore_x \
-I$(top_builddir)/src/lib/ecore_x \
-DTESTS_SRC_DIR=\"`pwd`/$(top_srcdir)\" \
@CHECK_CFLAGS@

tests_ecore_ecore_suite_LDADD = \
lib/ecore_con/libecore_con.la \
lib/ecore_file/libecore_file.la \
lib/ecore/libecore.la \
lib/eina/libeina.la \
@CHECK_LIBS@

if HAVE_ECORE_AUDIO
tests_ecore_ecore_suite_SOURCES += tests/ecore/ecore_test_ecore_audio.c
tests_ecore_ecore_suite_LDADD += lib/ecore_audio/libecore_audio.la
endif

endif
