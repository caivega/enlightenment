collections {
   images {
      image: "bg.jpg" COMP;
      image: "sky.jpg" COMP;
      image: "clouds.png" COMP;
      image: "input_bg.png" COMP;
   }
   group { name: "gui";
      parts {
         part { name: "bg";
            type: IMAGE;
            description { state: "default" 0.0;
               image.normal: "bg.jpg";
            }
         }
         part { name: "sky";
            type: IMAGE;
            description { state: "default" 0.0;
               image.normal: "sky.jpg";
               aspect: 2.6225 2.6225;
               color: 170 170 170 170;
            }
            description { state: "drift" 0.0;
               inherit: "default" 0.0;
               fill {
                  origin {
                     relative: 1.0 0.0;
                  }
               }
            }
         }
         part { name: "enemies";
            type: SWALLOW;
            description { state: "default" 0.0;
            }
         }
         part { name: "clouds";
            type: IMAGE;
            description { state: "default" 0.0;
               image.normal: "clouds.png";
               fill {
                  origin {
                     relative: 0.0 0.0;
                  }
                  size {
                     relative: 1.84722 1.0;
                  }
               }
            }
            description { state: "drift" 0.0;
               inherit: "default" 0.0;
               fill {
                  origin {
                     relative: 1.847220 0.0;
                  }
                  size {
                     relative: 1.84722 1.0;
                  }
               }
            }
         }
         part { name: "defense_wall";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.95;
               rel2.relative: 1.0 1.0;
            }
         }
         part { name: "score";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               text { font: "Sans:style=Bold";
                   size: 12;
                   min: 0 0;
                   max: 1 0;
                   align: 0 0;
                   text: "Score:";
               }
               color: 0 0 200 200;
               align: 0 0;
               min: 0 20;
               fixed: 0 1;
               rel2.relative: 1 0;
            }
         }
         part { name: "score_value";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               text { font: "Sans:style=Bold";
                   size: 12;
                   min: 0 0;
                   max: 1 0;
                   align: 0 0;
                   text: "0";
               }
               color: 200 200 200 200;
               align: 0 0;
               rel1.to: "score";
               rel1.relative: 1 0;
            }
         }
         part { name: "level";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               text { font: "Sans:style=Bold";
                   size: 12;
                   min: 0 0;
                   max: 1 0;
                   align: 0 0;
                   text: "Level:";
               }
               color: 0 0 200 200;
               align: 0 0;
               rel1.to: "score";
               rel1.relative: 0 1;
            }
         }
         part { name: "level_value";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               text { font: "Sans:style=Bold";
                   size: 12;
                   min: 0 0;
                   max: 1 0;
                   align: 0 0;
                   text: "1";
               }
               color: 200 200 200 200;
               align: 0 0 ;
               rel1.relative: 1 0;
               rel1.to: "level";
            }
         }
         part { name: "input_clipper";
            type: RECT;
            description { state: "default" 0.0;
               align: 0.5 1;
               min: 170 30;
               max: 170 30;
               fixed: 1 1;
               rel1.relative: 0.5 0.95;
               rel2.relative: 0.5 0.95;
            }
         }
         part { name: "input_bg";
            type: IMAGE;
            description { state: "default" 0.0;
               rel1.to: "input_clipper";
               rel2.to: "input_clipper";
               fixed: 1 1;
               image { normal:"input_bg.png";
                  border: 3 3 3 3;
               }
               color: 130 130 130 130;
            }
        }
        part { name: "entry";
            type: SWALLOW;
            clip_to: "input_clipper";
            description { state: "default" 0.0;
               rel1.to: "input_clipper";
               rel2.to: "input_clipper";
               align: 0.5 0.5;
               fixed: 1 1;
            }
         }
         part { name: "effect_overlay";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "hit" 0.0;
               color: 200 0 0 200;
            }
            description { state: "gameover" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "gameover";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               text { font: "Sans:style=Bold";
                   size: 30;
                   min: 0 0;
                   max: 1 0;
                   align: 0.5 0.5;
                   text: "Game Over";
               }
               color: 0 0 0 0;
               align: 0.5 0.5;
            }
            description { state: "gameover" 0.0;
               inherit: "default" 0.0;
               color: 100 100 100 255;
            }
         }
      }
      programs {
         program { name: "sky_anim1";
            signal: "load";
            action: STATE_SET "drift" 0.0;
            transition: "LINEAR" 30.0;
            target: "sky";
            after: "sky_anim2";
         }
         program { name: "sky_anim2";
            action: STATE_SET "default" 0.0;
            target: "sky";
            after: "sky_anim1";
         }
         program { name: "clouds_anim1";
            signal: "load";
            action: STATE_SET "drift" 0.0;
            transition: "LINEAR" 10.0;
            target: "clouds";
            after: "clouds_anim2";
         }
         program { name: "clouds_anim2";
            action: STATE_SET "default" 0.0;
            target: "clouds";
            after: "clouds_anim1";
         }
         program { name: "hit";
            signal: "elm,state,hit";
            source: "etypers";
            action: STATE_SET "hit" 0.0;
            target: "effect_overlay";
            after: "hit2";
         }
         program { name: "hit2";
            action: STATE_SET "default" 0.0;
            target: "effect_overlay";
            transition: DECELERATE 1;
         }
         program { name: "gameover";
            signal: "elm,state,gameover";
            source: "etypers";
            action: STATE_SET "hit" 0.0;
            target: "effect_overlay";
            after: "gameover2";
         }
         program { name: "gameover2";
            action: STATE_SET "gameover" 0.0;
            target: "effect_overlay";
            target: "gameover";
            transition: LINEAR 1.0;
         }
         program { name: "gamereset";
            signal: "elm,state,gamereset";
            source: "etypers";
            action: STATE_SET "default" 0.0;
            target: "effect_overlay";
            target: "effect_overlay";
            target: "gameover";
         }
      }
   }
////////////////////////////////////////////////////////////////////////////////
   group { name: "elm/entry/base/etypers";
      styles {
         style { name: "entry_textblock_style";
            base: "font=Sans font_size=12 color=#000 text_class=entry left_margin=2 right_margin=2";
         }
         style { name: "entry_textblock_disabled_style";
            base: "font=Sans font_size=12 color=#00000080 text_class=entry left_margin=2 right_margin=2";
         }
         style { name: "entry_textblock_guide_style";
            base: "font=Sans font_size=12 color=#00000040 text_class=entry left_margin=2 right_margin=2 ellipsis=0.0";
         }
      }
      parts {
         part { name: "elm.guide";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.text";
               rel2.to: "elm.text";
               text {
                  style: "entry_textblock_guide_style";
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 1;
            scale: 1;
            entry_mode: EDITABLE;
            select_mode: EXPLICIT;
            multiline: 1;
            description { state: "default" 0.0;
               /* we gotta use 0 0 here, because of scrolled entries */
               fixed: 0 0;
               text {
                  style: "entry_textblock_style";
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "entry_textblock_disabled_style";
                  min: 0 1;
               }
            }
         }
      }
      programs {
         program { name: "focus";
            signal: "load";
            source: "";
            action: FOCUS_SET;
            target: "elm.text";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "gdisable";
            signal: "elm,guide,disabled";
            source: "elm";
            action: STATE_SET "hidden" 0.0;
            target: "elm.guide";
         }
         program { name: "genable";
            signal: "elm,guide,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.guide";
         }
      }
   }
   group { name: "elm/entry/base-single/etypers";
      inherit: "elm/entry/base/etypers";
      styles
      {
         style { name: "entry_single_textblock_style";
            base: "font=Sans font_size=13 color=#000000 text_class=entry left_margin=2 right_margin=2";
         }
         style { name: "entry_single_textblock_disabled_style";
            base: "font=Sans font_size=13 color=#00000080 text_class=entry left_margin=2 right_margin=2";
         }
         style { name: "entry_single_textblock_guide_style";
            base: "font=Sans font_size=13 color=#00000080 text_class=entry left_margin=2 right_margin=2 ellipsis=0.0";
         }
      }
      parts {
         part { name: "elm.guide";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.text";
               rel2.to: "elm.text";
               text {
                  style: "entry_single_textblock_guide_style";
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text";
            multiline: 0;
            description { state: "default" 0.0;
               text {
                  style: "entry_single_textblock_style";
                  min: 1 1;
                  max: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "entry_single_textblock_disabled_style";
               }
            }
         }
      }
   }
   group { name: "elm/entry/base-noedit/etypers";
      inherit: "elm/entry/base/etypers";
      parts {
         part { name: "elm.text";
            entry_mode: PLAIN;
            description { state: "default" 0.0;
               fixed: 1 0;
               text {
                  style: "entry_textblock_style";
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "entry_textblock_disabled_style";
               }
            }
         }
      }
   }
////////////////////////////////////////////////////////////////////////////////
#define POPUP_ITEM_STATE_ENABLED  0
#define POPUP_ITEM_STATE_DISABLED 1
   group { name: "elm/notify/block_events/etypers";
      parts {
         part { name: "block_events";
            type: RECT;
            description { state: "default" 0.0;
               color: 50 50 50 125;
            }
         }
      }
      programs {
         program { name: "block_clicked";
            signal: "mouse,clicked,1";
            source: "block_events";
            action: SIGNAL_EMIT "elm,action,click" "elm";
         }
      }
   }
   group { name: "elm/popup/base/etypers";
      styles {
         style { name: "popup_title_style";
            base: "font=Sans font_size=14 align=center color=#ffffff wrap=mixed ellipsis=1.0";
         }
      }
      parts {
         part { name: "base";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: 250 0;
               color: 237 237 237 255;
               align: 0.0 0.0;
            }
         }
         part { name: "elm.bg.title";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: 250 50;
               fixed : 1 1;
               align: 0.5 0.0;
               visible: 0;
               color: 172 172 172 255;
               rel1 {
                  relative: 0.5 0.0;
                  to: "base";
               }
               rel2 {
                  relative: 0.5 0.0;
                  to: "base";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "left_pad";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 10 0;
               max: 10 0;
               fixed: 1 1;
               align: 0.0 0.0;
               visible: 0;
               rel1.to: "elm.bg.title";
            }
         }
         part { name: "right_pad";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 10 0;
               max: 10 0;
               fixed: 1 1;
               align: 1.0 1.0;
               visible: 0;
               rel2.to: "elm.bg.title";
            }
         }
         part { name: "elm.swallow.title.icon";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 48 48;
               max: 48 48;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
                  to: "left_pad";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "right_pad";
                  relative: 0.0 1.0;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.text.title";
            type: TEXTBLOCK;
            scale:1;
            description { state: "default" 0.0;
               fixed: 1 1;
               text {
                  style: "popup_title_style";
                  min: 0 0;
                  max: 0 1;
               }
               visible:0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "left_pad";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "right_pad";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale : 1;
            description { state: "default" 0.0;
               min: 400 0;
               fixed: 1 0;
               rel1 {
                  relative: 0.5 0.0;
                  to: "base";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to: "base";
               }
            }
            description { state: "show_title_area" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.5 1.0;
                  to: "elm.bg.title";
               }
            }
            description { state: "show_action_area" 0.0;
               inherit: "default" 0.0;
               rel2 {
                  relative: 0.5 0.0;
                  to: "elm.bg.action_area";
               }
            }
            description { state: "show_action_title_area" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.5 1.0;
                  to: "elm.bg.title";
               }
               rel2 {
                  relative: 0.5 0.0;
                  to: "elm.bg.action_area";
               }
            }
         }
         part { name: "elm.bg.action_area";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: 250 60;
               fixed : 1 1;
               align: 0.5 1.0;
               visible: 0;
               color: 183 183 183 255;
               rel1 {
                  relative: 0.0 1.0;
                  to: "base";
               }
               rel2.to: "base";
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.action_area";
            type: SWALLOW;
            scale : 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.to: "elm.bg.action_area";
               rel2.to: "elm.bg.action_area";
            }
         }
      }
      programs {
         program { name: show_title_icon;
            signal: "elm,state,title,icon,visible";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.title.icon";
         }
         program { name: hide_title_icon;
            signal: "elm,state,title,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.title.icon";
         }
         program { name: show_title_text;
            signal: "elm,state,title,text,visible";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "elm.text.title";
         }
         program { name: hide_title_text;
            signal: "elm,state,title,text,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text.title";
         }
         program { name: show_title_area;
            signal: "elm,state,title_area,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.action_area", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.swallow.content", "show_action_title_area", 0.0);
               else
                 set_state(PART:"elm.swallow.content", "show_title_area", 0.0);
               set_state(PART:"elm.bg.title", "visible", 0.0);
            }
         }
         program { name: hide_title_area;
            signal: "elm,state,title_area,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.action_area", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.swallow.content", "show_action_area", 0.0);
               else
                 set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"elm.bg.title", "default", 0.0);
            }
         }
         program { name: show_action_area;
            signal: "elm,state,action_area,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.bg.title", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.swallow.content", "show_action_title_area", 0.0);
               else
                 set_state(PART:"elm.swallow.content", "show_action_area", 0.0);
               set_state(PART:"elm.bg.action_area", "visible", 0.0);
            }
         }
         program { name: hide_action_area;
            signal: "elm,state,action_area,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.bg.title", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.swallow.content", "show_title_area", 0.0);
               else
                 set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"elm.bg.action_area", "default", 0.0);
            }
         }
      } /* end of programs */
   }
   group { name: "elm/popup/item/etypers";
      script {
         public item_state = POPUP_ITEM_STATE_ENABLED;
      }
      parts {
         part { name: "event_blocker";
            type: RECT;
            description { state: "default" 0.0;
            }
         }
         part { name: "bg";
            mouse_events: 0;
            type: RECT;
            description { state: "default" 0.0;
               color: 240 240 240 255;
               min: 0 51;
               align: 0.5 0.0;
            }
            description { state: "clicked" 0.0;
               color: 190 170 150 255;
            }
         }
         part { name: "padding_left_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: 10 10;
               fixed: 1 1;
               visible: 0;
            }
         }
         part { name: "padding_right_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: 10 10;
               fixed: 1 1;
               visible: 0;
            }
         }
         part { name: "separator";
            mouse_events: 0;
            type: RECT;
            scale: 1;
            description { state: "dafault" 0.0;
               color: 180 180 180 255;
               align: 0.5 1.0;
               min: 0 1;
               max: 999999 1;
            }
         }
         part { name: "padding_icon_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0; //when only icon or no icon is there
               align: 0.0 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "elm.swallow.content";
               }
               rel2.to: "elm.swallow.content";
               fixed: 1 0;
               min: 0 0;
               visible: 0;
            }
            description { state: "visible" 0.0; //when icon is visible
               inherit: "default" 0.0;
               min: 10 0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 0;
               min: 40 40;
               max: 40 40;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
            description { state: "icononly" 0.0;
               min: 40 40;
               max: 40 40;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_icon_text";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to:"padding_right_bottom";
               }
               align: 0.5 0.5;
               color: 0 0 0 255;
               text {
                  font: "Sans:style=Bold";
                  size: 20;
                  min:  0 0;
                  align: 0.5 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 230 40;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 0 0;
               color: 255 255 255 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 128 128 128 255;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               color: 128 128 128 255;
               visible: 1;
               min: 180 40;
            }
         }
         part { name: "over1";
            type: RECT;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over2";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disclip";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               color: 87 87 87 128;
            }
         }
      }
      programs {
         program { name: "item_unclick";
            signal: "mouse,up,1";
            source: "over1";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,item,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disclip";
            after: "disable_text";
         }
         program { name: "enable";
            signal: "elm,state,item,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disclip";
            after: "enable_text";
         }
         program { name: "item_click2";
            signal: "mouse,down,1";
            source: "over2";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "clicked", 0.0);
               set_state(PART:"bg", "clicked", 0.0);
            }
         }
         program { name: "item_unclick2";
            signal: "mouse,up,1";
            source: "over2";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "clicked"))
                 set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"bg", "default", 0.0);
            }
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled", 0.0);
               set_int(item_state, POPUP_ITEM_STATE_DISABLED);
            }
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "default", 0.0);
               set_int(item_state, POPUP_ITEM_STATE_ENABLED);
            }
         }
         program { name: "text_show";
            signal: "elm,state,item,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly")) {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"padding_icon_text", "visible", 0.0);
               }
               if(get_int(item_state) != POPUP_ITEM_STATE_DISABLED)
                 set_state(PART:"elm.text", "visible", 0.0);
               else
                 set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,item,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible")) {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"padding_icon_text", "icononly", 0.0);
               }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,item,icon,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible")) {
                  set_state(PART:"elm.swallow.content", "visible", 0.0);
                  set_state(PART:"padding_icon_text", "visible", 0.0);
               }
               else {
                  set_state(PART:"elm.swallow.content", "icononly", 0.0);
                  set_state(PART:"padding_icon_text", "icononly", 0.0);
               }
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,item,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
      }
   }
   group { name: "elm/popup/buttons1/etypers";
      data.item: "action_area_height" "140";
      parts{
         part{ name:"actionbtn1";
            type: SWALLOW;
            scale : 1;
            description { state: "default" 0.0;
               min: 100 46;
               max: 100 46;
               fixed : 1 1;
               rel1.relative: 0.5 0.0;
               rel2.relative: 0.5 1.0;
            }
         }
      }
   }
   group { name: "elm/label/base/popup/etypers";
      styles {
         style { name: "popup_desc_style";
            base: "font=Sans:style=bold font_size=12 align=center color=#000000 text_class=label";
            tag:  "br" "\n";
            tag:  "ps" "ps";
            tag:  "whitecolor" "+ color=#ffffff";
            tag:  "tab" "\t";
         }
      }
      parts {
         part { name: "left_top_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               align: 0.0 0.0;
               min: 10 0;
               rel2.relative: 0 0;
            }
         }
         part { name: "right_bottom_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               align: 1.0 1.0;
               min: 10 0;
               rel1.relative: 1 1;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 380 0;
               text {
                  style: "popup_desc_style";
                  min: 0 1;
                  max: 0 1;
               }
               rel1 {
                  relative: 1.0 1.0;
                  to: left_top_padding;
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: right_bottom_padding;
               }
            }
         }
      }
   }
}
