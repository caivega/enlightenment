images {
	set {
		name: "connman_ethernet";
		image {
			image: "images/connman_ethernet-24x24.png" COMP;
			size: 0 0 24 24;
		}
		image {
			image: "images/connman_ethernet-64x64.png" COMP;
			size: 25 25 64 64;
		}
		image {
			image: "images/connman_ethernet-128x128.png" COMP;
			size: 65 65 128 128;
		}
		image {
			image: "images/connman_ethernet-256x256.png" COMP;
			size: 129 129 256 256;
		}
	}
	set {
		name: "connman_ethernet_disconnected";
		image {
			image: "images/connman_ethernet_disconnected-24x24.png" COMP;
			size: 0 0 24 24;
		}
		image {
			image: "images/connman_ethernet_disconnected-64x64.png" COMP;
			size: 25 25 64 64;
		}
		image {
			image: "images/connman_ethernet_disconnected-128x128.png" COMP;
			size: 65 65 128 128;
		}
		image {
			image: "images/connman_ethernet_disconnected-256x256.png" COMP;
			size: 129 129 256 256;
		}
	}
	set {
		name: "connman_wifi_offline";
		image {
			image: "images/connman_wifi_offline-24x24.png" COMP;
			size: 0 0 24 24;
		}
		image {
			image: "images/connman_wifi_offline-64x64.png" COMP;
			size: 25 25 64 64;
		}
		image {
			image: "images/connman_wifi_offline-128x128.png" COMP;
			size: 65 65 128 128;
		}
		image {
			image: "images/connman_wifi_offline-256x256.png" COMP;
			size: 129 129 256 256;
		}
	}
	set {
		name: "connman_wifi_0";
		image {
			image: "images/connman_wifi_0-24x24.png" COMP;
			size: 0 0 24 24;
		}
		image {
			image: "images/connman_wifi_0-64x64.png" COMP;
			size: 25 25 64 64;
		}
		image {
			image: "images/connman_wifi_0-128x128.png" COMP;
			size: 65 65 128 128;
		}
		image {
			image: "images/connman_wifi_0-256x256.png" COMP;
			size: 129 129 256 256;
		}
	}
	set {
		name: "connman_wifi_33";
		image {
			image: "images/connman_wifi_33-24x24.png" COMP;
			size: 0 0 24 24;
		}
		image {
			image: "images/connman_wifi_33-64x64.png" COMP;
			size: 25 25 64 64;
		}
		image {
			image: "images/connman_wifi_33-128x128.png" COMP;
			size: 65 65 128 128;
		}
		image {
			image: "images/connman_wifi_33-256x256.png" COMP;
			size: 129 129 256 256;
		}
	}
	set {
		name: "connman_wifi_66";
		image {
			image: "images/connman_wifi_66-24x24.png" COMP;
			size: 0 0 24 24;
		}
		image {
			image: "images/connman_wifi_66-64x64.png" COMP;
			size: 25 25 64 64;
		}
		image {
			image: "images/connman_wifi_66-128x128.png" COMP;
			size: 65 65 128 128;
		}
		image {
			image: "images/connman_wifi_66-256x256.png" COMP;
			size: 129 129 256 256;
		}
	}
	set {
		name: "connman_wifi_99";
		image {
			image: "images/connman_wifi_99-24x24.png" COMP;
			size: 0 0 24 24;
		}
		image {
			image: "images/connman_wifi_99-64x64.png" COMP;
			size: 25 25 64 64;
		}
		image {
			image: "images/connman_wifi_99-128x128.png" COMP;
			size: 65 65 128 128;
		}
		image {
			image: "images/connman_wifi_99-256x256.png" COMP;
			size: 129 129 256 256;
		}
	}
	set {
		name: "connman_problem";
		image {
			image: "images/connman_problem-24x24.png" COMP;
			size: 0 0 24 24;
		}
		image {
			image: "images/connman_problem-64x64.png" COMP;
			size: 25 25 64 64;
		}
		image {
			image: "images/connman_problem-128x128.png" COMP;
			size: 65 65 128 128;
		}
		image {
			image: "images/connman_problem-256x256.png" COMP;
			size: 129 129 256 256;
		}
	}
	set {
		name: "connman_lock";
		image {
			image: "images/connman_lock-24x24.png" COMP;
			size: 0 0 24 24;
		}
		image {
			image: "images/connman_lock-64x64.png" COMP;
			size: 25 25 64 64;
		}
		image {
			image: "images/connman_lock-128x128.png" COMP;
			size: 65 65 128 128;
		}
		image {
			image: "images/connman_lock-256x256.png" COMP;
			size: 129 129 256 256;
		}
	}
}

group {
	name: "e/modules/connman/icon/ethernet";
	max: 256 256;
	min: 16 16;
	parts {
		part {
			name: "icon";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				image.normal: "connman_ethernet";
			}
		}
	}
}

group {
	name: "e/modules/connman/icon/wifi";
	max: 256 256;
	min: 16 16;
	script {
		public message(Msg_Type:type, id, ...) {
			if ((type == MSG_INT) && (id == 1)) {
				new strength;
				strength = getarg(2);
				if (strength > 66)
					run_program(PROGRAM:"strength,good");
				else if (strength > 33)
					run_program(PROGRAM:"strength,medium");
				else
					run_program(PROGRAM:"strength,bad");
			}
		}
	}
	parts {
		part {
			name: "icon";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				image.normal: "connman_wifi_99";
			}
			description {
				state: "medium" 0.0;
				inherit: "default" 0.0;
				image.normal: "connman_wifi_66";
			}
			description {
				state: "bad" 0.0;
				inherit: "default" 0.0;
				image.normal: "connman_wifi_33";
			}
		}
		programs {
			program {
				name: "strength,good";
				action: STATE_SET "default" 0.0;
				target: "icon";
			}
			program {
				name: "strength,medium";
				action: STATE_SET "medium" 0.0;
				target: "icon";
			}
			program {
				name: "strength,bad";
				action: STATE_SET "bad" 0.0;
				target: "icon";
			}
		}

		part {
			name: "lock";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				image.normal: "connman_lock";
				color: 255 255 255 0;
				color_class: "focus";
				visible: 1;
			}
			description {
				state: "locked" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				color_class: "focus";
				visible: 1;
			}
		}
		programs {
			program { signal: "e,security,none";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "lock";
			}
			program { signal: "e,security,wep";
				source: "e";
				after: "do-lock";
			}
			program { signal: "e,security,psk";
				source: "e";
				after: "do-lock";
			}
			program { signal: "e,security,ieee8021x";
				source: "e";
				after: "do-lock";
			}
			program { signal: "e,security,wps";
				source: "e";
				after: "do-lock";
			}
			program { signal: "e,security,wpa";
				source: "e";
				after: "do-lock";
			}
			program { signal: "e,security,rsn";
				source: "e";
				after: "do-lock";
			}
			program { name: "do-lock";
				action: STATE_SET "locked" 0.0;
				target: "lock";
			}
		}
	}
}

// GADGET and TIP all have the same parts and signals:
//
// SIGNALS:
//    e,unavailable: connmand is not running (nothing else works)
//    e,available: connmand is running
//
//    e,changed,offline_mode,{yes,no}
//    e,changed,connected,{yes,no}
//    e,changed,service,{system,ethernet,wifi,wimax,bluetooth,cellular,vpn}
//    e,changed,technology,{wifi,ethernet,bluetooth,wimax,cellular}
//    e,changed,state,{idle,association,configuration,ready,disconnect,failure}
//    e,changed,mode,{managed,adhoc,gprs,edge,umts}
//    e,changed,security,{none,wep,psk,ieee8021x,wpa,rsn}
//    e,changed,favorite,{yes,no}
//    e,changed,auto_connect,{yes,no}
//    e,changed,pass_required,{yes,no}
//    e,changed,error,{yes,no}
//    e,changed,ipv4_address,{yes,no}
//
// PARTS:
//    e.text.offline_mode (filled with offline message)
//    e.text.name
//    e.text.error
//    e.text.technology
//    e.text.state
//    e.text.ipv4_address
//
// MESSAGES:
//    id=1, type=MSG_INT, description=strength (0-100)
group {
	name: "e/modules/connman/main";
	max: 256 256;
	min: 16 16;
	script {
		public message(Msg_Type:type, id, ...) {
			if ((type == MSG_INT) && (id == 1)) {
				new strength;
				strength = getarg(2);
				if (strength > 66)
					run_program(PROGRAM:"strength,good");
				else if (strength > 33)
					run_program(PROGRAM:"strength,medium");
				else
					run_program(PROGRAM:"strength,bad");
			}
		}
	}
	parts {
		part {
			name: "eventarea";
			type: RECT;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				color: 255 255 255 0;
			}
		}
		part {
			name: "area";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 0;
				rel1.offset: 2 2;
				rel2.offset: -3 -3;
			}
		}

		part {
			name: "state-clipper";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 255;
			}
			description {
				state: "inverted" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}
		}
		part {
			name: "state-inverted-clipper";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}
			description {
				state: "inverted" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}
		programs {
			program {
				name: "e,changed,state,online";
				signal: "e,changed,state,online";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "state-clipper";
				target: "state-inverted-clipper";
				after: "state-connecting-stop";
			}
			program {
				name: "e,changed,state,ready";
				signal: "e,changed,state,ready";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "state-clipper";
				target: "state-inverted-clipper";
				after: "state-connecting-stop";
			}
			program {
				name: "e,changed,state,failure";
				signal: "e,changed,state,failure";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "state-clipper";
				target: "state-inverted-clipper";
				after: "state-connecting-stop";
			}
			program {
				name: "e,changed,state,disconnect";
				signal: "e,changed,state,disconnect";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "state-clipper";
				target: "state-inverted-clipper";
				after: "state-connecting-stop";
			}
			program {
				name: "e,changed,state,idle";
				signal: "e,changed,state,idle";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "state-clipper";
				target: "state-inverted-clipper";
				after: "state-connecting-stop";
			}
			program {
				name: "e,changed,state,association";
				signal: "e,changed,state,association";
				source: "e";
				action: STATE_SET "inverted" 0.0;
				target: "state-clipper";
				target: "state-inverted-clipper";
				after: "state-connecting";
			}
			program {
				name: "e,changed,state,configuration";
				signal: "e,changed,state,configuration";
				source: "e";
				action: STATE_SET "inverted" 0.0;
				target: "state-clipper";
				target: "state-inverted-clipper";
				after: "state-connecting";
			}
			program {
				name: "state-connecting-stop";
				action: ACTION_STOP;
				target: "state-connecting";
				after: "state-connecting-stop2";
			}
			program {
				name: "state-connecting-stop2";
				action: STATE_SET "default" 0.0;
				target: "connecting";
			}
			program {
				name: "state-connecting";
				action: STATE_SET "connecting" 0.0;
				target: "connecting";
				transition: LINEAR 0.5333;
				after: "state-connecting";
			}
		}
		part {
			name: "disconnected-visibility";
			type: RECT;
			mouse_events: 0;
			clip_to: "state-clipper";
			description {
				state: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}
			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}
		part {
			name: "disconnected";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "disconnected-visibility";
			description {
				state: "default" 0.0;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				fixed: 1 1;
				image.normal: "connman_ethernet_disconnected";
				rel1.to: "area";
				rel2.to: "area";
			}
			description {
				state: "offline" 0.0;
				inherit: "default" 0.0;
				image.normal: "connman_wifi_offline";
			}
		}
		part {
			name: "connecting";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "state-inverted-clipper";
			description {
				state: "default" 0.0;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				fixed: 1 1;
				image.normal: "connman_wifi_0";
				rel1.to: "area";
				rel2.to: "area";
			}
			description {
				state: "connecting" 0.0;
				inherit: "default" 0.0;
				image.tween: "connman_wifi_0";
				image.tween: "connman_wifi_33";
				image.tween: "connman_wifi_66";
				image.normal: "connman_wifi_99";
			}
		}
		part {
			name: "ethernet-visibility";
			type: RECT;
			mouse_events: 0;
			clip_to: "state-clipper";
			description {
				state: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}
			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}
		part {
			name: "ethernet";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "ethernet-visibility";
			description {
				state: "default" 0.0;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				fixed: 1 1;
				image.normal: "connman_ethernet";
				rel1.to: "area";
				rel2.to: "area";
			}
		}
		part {
			name: "wifi-visibility";
			type: RECT;
			mouse_events: 0;
			clip_to: "state-clipper";
			description {
				state: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}
			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}
		part {
			name: "wifi";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "wifi-visibility";
			description {
				state: "default" 0.0;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				fixed: 1 1;
				image.normal: "connman_wifi_99";
				rel1.to: "area";
				rel2.to: "area";
			}
			description {
				state: "good" 0.0;
				inherit: "default" 0.0;
			}
			description {
				state: "medium" 0.0;
				inherit: "default" 0.0;
				image.normal: "connman_wifi_66";
			}
			description {
				state: "bad" 0.0;
				inherit: "default" 0.0;
				image.normal: "connman_wifi_33";
			}
		}

		part {
			name: "availability";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 0;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				image.normal: "connman_problem";
				rel1.to: "area";
				rel2.to: "area";
				visible: 0;
			}
			description {
				state: "unavailable" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}
		programs {
			program {
				name: "e,available";
				signal: "e,available";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "availability";
				transition: LINEAR 0.2;
			}
			program {
				name: "e,unavailable";
				signal: "e,unavailable";
				source: "e";
				after: "e,changed,technology,none";
				after: "e,unavailable,2";
			}
			program {
				name: "e,unavailable,2";
				action: STATE_SET "unavailable" 0.0;
				target: "availability";
				transition: LINEAR 0.2;
			}
		}

		// TODO: wimax, cellular, bluetooth
		programs {
			program {
				name: "strength,good";
				action: STATE_SET "good" 0.0;
				target: "wifi";
				// add wimax, cellular, bluetooth
			}
			program {
				name: "strength,medium";
				action: STATE_SET "medium" 0.0;
				target: "wifi";
				// add wimax, cellular, bluetooth
			}
			program {
				name: "strength,bad";
				action: STATE_SET "bad" 0.0;
				target: "wifi";
				// add wimax, cellular, bluetooth
			}
			program {
				signal: "e,changed,offline_mode,yes";
				source: "e";
				action: STATE_SET "offline" 0.0;
				target: "disconnected";
			}
			program {
				signal: "e,changed,offline_mode,no";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "disconnected";
			}
			program {
				name: "e,changed,technology,none";
				signal: "e,changed,technology,none";
				source: "e";
				action: STATE_SET "visible" 0.0;
				target: "disconnected-visibility";
				after: "e,changed,technology,none,others";
			}
			program {
				name: "e,changed,technology,none,others";
				action: STATE_SET "default" 0.0;
				target: "ethernet-visibility";
				target: "wifi-visibility";
				// add wimax, cellular, bluetooth
			}
			program {
				name: "e,changed,technology,ethernet";
				signal: "e,changed,technology,ethernet";
				source: "e";
				action: STATE_SET "visible" 0.0;
				target: "ethernet-visibility";
				after: "e,changed,technology,ethernet,others";
			}
			program {
				name: "e,changed,technology,ethernet,others";
				action: STATE_SET "default" 0.0;
				target: "disconnected-visibility";
				target: "wifi-visibility";
				// add wimax, cellular, bluetooth
			}
			program {
				name: "e,changed,technology,wifi";
				signal: "e,changed,technology,wifi";
				source: "e";
				action: STATE_SET "visible" 0.0;
				target: "wifi-visibility";
				after: "e,changed,technology,wifi,others";
			}
			program {
				name: "e,changed,technology,wifi,others";
				action: STATE_SET "default" 0.0;
				target: "disconnected-visibility";
				target: "ethernet-visibility";
				// add wimax, cellular, bluetooth
			}
		}

		part {
			name: "text-visibility";
			type: RECT;
			description { state: "default" 0.0;
			}
			description { state: "hidden" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}
		}
		part {
			name: "e.text.name";
			type: TEXT;
			mouse_events: 0;
			effect: TEXT_EFFECT;
			clip_to: "text-visibility";
			description {
				state: "default" 0.0;
				TEXT_COLOR
				align: 0.5 1.0;
				rel1 {
					relative: 0.0 1.0;
					offset: 0 10;
					to: "area";
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -1 -1;
					to: "area";
				}
				text {
					font: FONT;
					size: 8;
					align: 0.5 1.0;
					text: "";
					min: 0 1;
				}
			}
			description {
				state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		programs {
			program {
				signal: "load";
				after: "resize";
			}
			program {
				name: "resize";
				signal: "resize";
				script {
					new x, y, w, h;
					get_geometry(PART:"eventarea", x, y, w, h);
					if ((w <= 32) || (h < 60))
						set_state(PART:"text-visibility", "hidden", 0.0);
					else
						set_state(PART:"text-visibility", "default", 0.0);
				}
			}
			program {
				name: "e,changed,connected,no";
				signal: "e,changed,connected,no";
				source: "e";
				action: STATE_SET "hidden" 0.0;
				target: "e.text.name";
			}
			program {
				name: "e,changed,connected,yes";
				signal: "e,changed,connected,yes";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "e.text.name";
			}
		}
	}
}

group { name: "e/modules/connman/tip";
	script {
		public message(Msg_Type:type, id, ...) {
			if ((type == MSG_INT) && (id == 1)) {
				new strength;
				new buf[32];
				new Float:val;
				strength = getarg(2);
				if (strength >= 0) {
					val = float(strength) / 140.0; ///////xxxx
					snprintf(buf, sizeof(buf), "%d%%", strength);
					set_text(PART:"strength_text", buf);
					set_drag(PART:"strength_fill_knob", val, 0.0);
				}
			}
		}
	}
	min: 250 40;
	parts {
		part { name: "e.text.name";
			type: TEXT;
			mouse_events: 0;
			effect: TEXT_EFFECT;
			description { state: "default" 0.0;
				TEXT_COLOR;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0 0.0;
					offset: 10 0;
				}
				rel2 {
					relative: 0.0 1.0;
					offset: 10 -1;
				}
				text {
					font: FONT_BOLD;
					size: 12;
					min: 1 1;
					align: 0.0 0.5;
				}
			}
		}
		part { name: "strength_clipper";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
				visible: 1;
				color: 255 255 255 0;
				rel1 {
					to_x: "e.text.name";
					relative: 1.0 0.0;
					offset: 10 0;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -5 -1;
				}
			}
			description { state: "ethernet" 0.0;
				inherit: "default" 0.0;
			}
			description { state: "wifi" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}
		part { name: "strength_text";
			type: TEXT;
			mouse_events: 0;
			clip_to: "strength_clipper";
			description { state: "default" 0.0;
				TEXT_COLOR;
				rel1 {
					to: "strength_clipper";
					relative: 1.0 0.0;
					offset: -30 0;
				}
				rel2 {
					to: "strength_clipper";
					relative: 1.0 1.0;
					offset: -1 -1;
				}
				text {
					font: FONT;
					size: 10;
					align: 0.5 0.5;
					min: 1 1;
				}
			}
		}
		part { name: "strength_progress";
			type: RECT;
			mouse_events: 0;
			clip_to: "strength_clipper";
			description { state: "default" 0.0;
				color: 255 255 255 255;
				rel1 {
					to: "strength_clipper";
					relative: 0.0 0.0;
					offset: 10 0;
				}
				rel2 {
					to_x: "strength_text";
					to_y: "strength_clipper";
					relative: 0.0 1.0;
					offset: -10 -1;
				}
			}
		}
		part { name: "strength_stroke";
			type: IMAGE;
			clip_to: "strength_progress";
			mouse_events: 0;
			description { state: "default" 0.0;
				min: 20 18;
				max: 9999 18;
				image {
					normal: "images/check_bt1.png";
					border: 7 7 7 7;
				}
				rel1.to: "strength_fill";
				rel2.to: "strength_fill";
			}
		}
		part { name: "strength_fill";
			type: IMAGE;
			clip_to: "strength_fill_clipper";
			mouse_events: 0;
			description { state: "default" 0.0;
				min: 20 18;
				max: 9999 18;
				image {
					normal: "images/check_bt1.png";
					border: 7 7 7 7;
				}
				color_class: "focus";
				rel1.to: "strength_progress";
				rel2.to: "strength_progress";
			}
		}
		part { name: "strength_fill_confine";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				rel1.to: "strength_fill";
				rel2.to: "strength_fill";
			}
		}
		part { name: "strength_fill_knob";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			dragable {
				x: 1 1 0;
				y: 0 0 0;
				confine: "strength_fill_confine";
			}
			description { state: "default" 0.0;
				min: 0 0;
				max: 0 0;
			}
		}
		part { name: "strength_fill_clipper";
			type: RECT;
			mouse_events: 0;
			clip_to: "strength_progress";
			description { state: "default" 0.0;
				color: 255 255 255 255;
				rel1.to: "strength_fill_confine";
				rel2.to_x: "strength_fill_knob";
				rel2.to_y: "strength_fill_confine";
			}
		}
		programs {
			program { name: "e,changed,technology,none";
				signal: "e,changed,technology,none";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "strength_clipper";
			}
			program { name: "e,changed,technology,ethernet";
				signal: "e,changed,technology,ethernet";
				source: "e";
				action: STATE_SET "ethernet" 0.0;
				target: "strength_clipper";
			}
			program { name: "e,changed,technology,wifi";
				signal: "e,changed,technology,wifi";
				source: "e";
				action: STATE_SET "wifi" 0.0;
				target: "strength_clipper";
			}
		}
	}
}
